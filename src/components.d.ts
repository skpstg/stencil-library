/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface MyComponent {
        /**
          * The first name
         */
        "first": string;
        /**
          * The last name
         */
        "last": string;
        /**
          * The middle name
         */
        "middle": string;
    }
    interface SlButton {
        /**
          * Accessible label for the button (used when content is icon-only)
         */
        "ariaLabel"?: string;
        /**
          * Disables the button
          * @default false
         */
        "disabled": boolean;
        /**
          * Makes the button full width
          * @default false
         */
        "fullWidth": boolean;
        /**
          * The button's size
          * @default 'medium'
         */
        "size": 'small' | 'medium' | 'large';
        /**
          * The button's type
          * @default 'button'
         */
        "type": 'button' | 'submit' | 'reset';
        /**
          * The button's variant style
          * @default 'primary'
         */
        "variant": 'primary' | 'secondary' | 'success' | 'warning' | 'danger';
    }
    interface SlCard {
        /**
          * Accessible label for the card region
         */
        "ariaLabel"?: string;
        /**
          * Adds elevation shadow to the card
          * @default 'md'
         */
        "elevation": 'none' | 'sm' | 'md' | 'lg' | 'xl';
        /**
          * Makes the card interactive (adds hover effect)
          * @default false
         */
        "interactive": boolean;
        /**
          * ARIA role for the card
          * @default 'region'
         */
        "role": string;
    }
}
declare global {
    interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {
    }
    var HTMLMyComponentElement: {
        prototype: HTMLMyComponentElement;
        new (): HTMLMyComponentElement;
    };
    interface HTMLSlButtonElement extends Components.SlButton, HTMLStencilElement {
    }
    var HTMLSlButtonElement: {
        prototype: HTMLSlButtonElement;
        new (): HTMLSlButtonElement;
    };
    interface HTMLSlCardElement extends Components.SlCard, HTMLStencilElement {
    }
    var HTMLSlCardElement: {
        prototype: HTMLSlCardElement;
        new (): HTMLSlCardElement;
    };
    interface HTMLElementTagNameMap {
        "my-component": HTMLMyComponentElement;
        "sl-button": HTMLSlButtonElement;
        "sl-card": HTMLSlCardElement;
    }
}
declare namespace LocalJSX {
    interface MyComponent {
        /**
          * The first name
         */
        "first"?: string;
        /**
          * The last name
         */
        "last"?: string;
        /**
          * The middle name
         */
        "middle"?: string;
    }
    interface SlButton {
        /**
          * Accessible label for the button (used when content is icon-only)
         */
        "ariaLabel"?: string;
        /**
          * Disables the button
          * @default false
         */
        "disabled"?: boolean;
        /**
          * Makes the button full width
          * @default false
         */
        "fullWidth"?: boolean;
        /**
          * The button's size
          * @default 'medium'
         */
        "size"?: 'small' | 'medium' | 'large';
        /**
          * The button's type
          * @default 'button'
         */
        "type"?: 'button' | 'submit' | 'reset';
        /**
          * The button's variant style
          * @default 'primary'
         */
        "variant"?: 'primary' | 'secondary' | 'success' | 'warning' | 'danger';
    }
    interface SlCard {
        /**
          * Accessible label for the card region
         */
        "ariaLabel"?: string;
        /**
          * Adds elevation shadow to the card
          * @default 'md'
         */
        "elevation"?: 'none' | 'sm' | 'md' | 'lg' | 'xl';
        /**
          * Makes the card interactive (adds hover effect)
          * @default false
         */
        "interactive"?: boolean;
        /**
          * ARIA role for the card
          * @default 'region'
         */
        "role"?: string;
    }
    interface IntrinsicElements {
        "my-component": MyComponent;
        "sl-button": SlButton;
        "sl-card": SlCard;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "my-component": LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
            "sl-button": LocalJSX.SlButton & JSXBase.HTMLAttributes<HTMLSlButtonElement>;
            "sl-card": LocalJSX.SlCard & JSXBase.HTMLAttributes<HTMLSlCardElement>;
        }
    }
}
